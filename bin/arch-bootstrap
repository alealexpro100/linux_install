#!/bin/bash
#######################################
#       Pacstrap's like script for    #
#       installing archlinux to dir.  #
#       Created by Alexey.            #
#######################################
set -e

# Check options.
if [[ -z $1 || -z $2 || -z $3 || -z $4 ]]; then
  echo "Example: $0 ./bin/arch-chroot x86_64 http://mirrors.evowise.com/archlinux /mnt base base-devel mc htop"
  echo "If no packages are entered, base group will be installed."
  exit 1
fi

arch_chroot_command=$1 arch=$2 mirror=$3 dir=$4 qemu_arch=""; shift 4; add_packages=$@
[[ ! -e $arch_chroot_command ]] && echo "$arch_chroot_command not found!" && exit 1


#Get core repositories and pkg_list of core repo
# Try first variant of mirror...
pkg_list=$(wget -q -O - "$mirror/core/os/$arch" | sed -n '/<a / s/^.*<a [^>]*href="\([^\"]*\)".*$/\1/p' | awk -F'/' '{print $NF}' | sort -rn)
if [[ -z $pkg_list ]]; then
  # If first is not valid, try second variant of mirror...
  pkg_list=$(wget -q -O - "$mirror/$arch/core" | sed -n '/<a / s/^.*<a [^>]*href="\([^\"]*\)".*$/\1/p' | awk -F'/' '{print $NF}' | sort -rn)
  [[ -z $pkg_list ]] && echo "Error geting pkg_list. Check $mirror!" && exit 1
  core_repo="$mirror/$arch/core"
  repo="$mirror/\$arch/\$repo"
else
    core_repo="$mirror/core/os/$arch"
    repo="$mirror/\$repo/os/\$arch"
fi



# Set pico complect of packages for archlinux installation.
base_packages="acl attr bzip2 curl e2fsprogs expat filesystem gcc-libs glibc gpgme icu keyutils krb5 libarchive libassuan
libgpg-error libidn2 libnghttp2 libpsl libssh2 libunistring libunistring lz4 openssl pacman xz zlib zstd"

#Detect host arch, parse it and setup qemu-emulation.
case $(uname -m) in
  i[3-6]86|x86) host_arch=i686;;
  x86_64|amd64) host_arch=x86_64;;
  aarch64|arm64|armv8l) host_arch=aarch64;;
  armhf|armlf) host_arch=arm;;
  *) host_arch=$(uname -m);;
esac

if [[ "$host_arch" != "$arch" ]]; then
  case $arch in
    x86|i?86) qemu_arch=i386;;
    x86_64|amd64) qemu_arch=x86_64;;
    aarch64|arm64|armv8l) qemu_arch=aarch64;;
    armhf) qemu_arch=arm;;
    *) qemu_arch=$arch;;
  esac
fi

case $arch in
  i?86) base_packages="archlinux32-keyring $base_packages"
  ;;
  x86_64) base_packages="archlinux-keyring $base_packages"
  ;;
  *) base_packages="archlinuxarm-keyring $base_packages"
  ;;
esac

echo "Installing archlinux $arch to $dir..."

echo "Creating cache dir... "
cache_dir="$dir/var/cache/pacman/pkg"
mkdir -p "$cache_dir"

# Get pico complect of packages for installation to cache dir...
echo -e "\n[\e[0;33mWARNING\e[m] Downloading packages: "
for package in ${base_packages}; do
  echo "I: Retriving ${package}... "
  pkg_file=$(echo "${pkg_list}" | grep -m1 -e "^${package}-[[:digit:]].*\.xz$" -e "^${package}-[[:digit:]].*\.gz$")
  # Download packages.
  wget -q -t 3 -O "${cache_dir}/${pkg_file}" "${core_repo}/${pkg_file}"
done

# ...and extract them.
echo -e "\n[\e[0;33mWARNING\e[m] Unpacking packages: "
for package in ${base_packages}; do
  echo "I: Unpacking ${package}... "
  pkg_file=$(echo "${pkg_list}" | grep -m1 -e "^${package}-[[:digit:]].*\.xz$" -e "^${package}-[[:digit:]].*\.gz$")
  # Unpack downloaded packages.
  case "${pkg_file}" in
    *.gz) tar xzf "${cache_dir}/${pkg_file}" -C "${dir}" --exclude='./dev' --exclude='./sys' --exclude='./proc' --exclude='.INSTALL' --exclude='.MTREE' --exclude='.PKGINFO' --exclude='.BUILDINFO' 2>/dev/null;;
    *.bz2) tar xjf "${cache_dir}/${pkg_file}" -C "${dir}" --exclude='./dev' --exclude='./sys' --exclude='./proc' --exclude='.INSTALL' --exclude='.MTREE' --exclude='.PKGINFO' --exclude='.BUILDINFO'2>/dev/null;;
    *.xz) tar xJf "${cache_dir}/${pkg_file}" -C "${dir}" --exclude='./dev' --exclude='./sys' --exclude='./proc' --exclude='.INSTALL' --exclude='.MTREE' --exclude='.PKGINFO' --exclude='.BUILDINFO' 2>/dev/null;;
    *) echo "Incorrect ${pkg_file}! Exiting..."; return 1;;
  esac
done

echo "Ending bootstrap..."
# Put mirror to mirrorlist with choosed repo
mkdir -p $dir/etc/pacman.d
echo "Server = $repo" >> $dir/etc/pacman.d/mirrorlist

#Make tempory changes for rootfs (disable checking space and signature)...
rm -rf $dir/etc/hosts
cp {,$dir}/etc/hosts
sed -i "s/^[[:space:]]*\(CheckSpace\)/# \1/" "$dir/etc/pacman.conf"
sed -i "s/^[[:space:]]*SigLevel[[:space:]]*=.*$/SigLevel = Never/" "$dir/etc/pacman.conf"

#Write some commands for ending installation.
if [[ -z $add_packages ]]; then
  install_packages="base"
else
  install_packages="$base_packages $add_packages"
fi

# Only here we use arch-chroot.
# Fix non-mounpoint directory.
if ! mountpoint -q "$dir"; then
  mount --bind $dir $dir
  change_mount=1
else
  change_mount=0
fi
if [[ $qemu_arch == "i386" && $host_arch == "x86_64" ]]; then
  arch_chroot_command="linux32 $arch_chroot_command" qemu_arch=""
fi
if [[ ! -z $qemu_arch ]]; then
  cp /usr/bin/qemu-$qemu_arch-static $dir/usr/bin/
fi
$arch_chroot_command $dir /usr/bin/pacman -Sy --noconfirm --force $install_packages
$arch_chroot_command $dir pacman-key --init
$arch_chroot_command $dir pacman-key --populate
if [[ ! -z $qemu_arch ]]; then
  rm -rf $dir/usr/bin/qemu-$qemu_arch-static
fi
[[ $change_mount == 1 ]] && umount $dir

#Revert changes for directory.
rm -rf $dir/etc/resolv.conf.pacnew
mv $dir/etc/hosts{.pacnew,}
mv $dir/etc/pacman.conf{.pacnew,}

echo "Archlinux was succesfully installed to $dir."

# =)
echo "Script succesfully ended its work. Have a nice day!"
