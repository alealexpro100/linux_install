#!/bin/bash
###############################################################
### alpine boostrap script
### Copyright (C) 2021 ALEXPRO100 (ktifhfl)
### License: GPL v3.0
###############################################################

set -e

#Use library
export ALEXPRO100_LIB_LOCATION="${ALEXPRO100_LIB_LOCATION:-./lib/alexpro100_lib.sh}"
# shellcheck disable=SC1091
source ./lib/common/lib_connect.sh

[[ $UID != 0 ]] && return_err "This script requries root permissions!"

# Check options.
if [[ -z $4 ]]; then
  echo "Alpine linux boostrap script. It uses only choosed mirror."
  echo "Supports CUSTOM_ALPINE_REPO flag."
  echo "Example: $0 x86_64 v3.13 https://nl.alpinelinux.org/alpine /mnt htop"
  exit 1
fi

arch=$1 version=$2 mirror="$3"; dir="$(realpath "$4")"; shift 4; add_packages="$*"
parse_arch "$(uname -m)"
if [[ $mirror =~ https* ]]; then
  msg_print warning "Detected https mirror! Will try to use http for initial install."
  check_url "${mirror/https/http}" || return_err "Mirror $mirror does NOT support http!"
fi
if [[ $CUSTOM_ALPINE_REPO == "1" ]]; then
  check_url "$mirror" || return_err "Incorrect mirror $mirror!"
  download_repo="$mirror/$alpine_arch"
  arg_repos="-X ${mirror/https/http}"
else
  check_url "$mirror/$version/main/$arch" || return_err "Incorrect arch $arch, version $version or mirror $mirror!"
  download_repo="$mirror/$version/main/$alpine_arch"
  arg_repos="-X ${mirror/https/http}/$version/main -X ${mirror/https/http}/$version/community"
fi
if [[ $arch == "$alpine_arch" ]]; then
  arch_chroot_command="chroot_rootfs auto"
else
  if qemu_chroot check "$arch" ok; then
    arch_chroot_command="qemu_chroot $arch"
  else
    exit 1
  fi
fi

#Find, download and unpack apktools-static and install system with it.
create_tmp_dir alpine_apk
msg_print note "Getting link for apktools-static $alpine_arch..."
apktools_pkg=$(get_file_s - "$download_repo/" | get_file_list_html | grep apk-tools-static)
msg_print note "Downloading and extracting apk-tools static..."
get_file_s - "$download_repo/$apktools_pkg" | tar -xzf - -C "$alpine_apk" "sbin/apk.static" &>/dev/null
msg_print note "Installing alpine-base..."
SSL_NO_VERIFY_PEER=1 "$alpine_apk/sbin/apk.static" $arg_repos --allow-untrusted --root "$dir" --arch "$arch" --initdb add alpine-base || NEED_FIX=1
rm -rf "$alpine_apk"

PATH=/usr/sbin:/usr/bin:/sbin:/bin
apk_command="/sbin/apk $arg_repos"
$arch_chroot_command "$dir" $apk_command upgrade
[[ -n $NEED_FIX ]] && $arch_chroot_command "$dir" $apk_command fix '*'
[[ -n $add_packages ]] && $arch_chroot_command "$dir" $apk_command add $add_packages
if [[ $CUSTOM_ALPINE_REPO != "1" ]]; then
  echo -e "#$mirror/$version/main\n#$mirror/$version/community" >> "$dir/etc/apk/repositories"
  [[ $version == "edge" ]] && echo -e "#$mirror/$version/testing" >> "$dir/etc/apk/repositories"
fi

echo "Alpine was succesfully installed to $dir."

# =)
echo "Script succesfully ended its work. Have a nice day!"
