#!/bin/bash
###############################################################
### voidlinux boostrap script
### Copyright (C) 2021 ALEXPRO100 (alealexpro100)
### License: GPL v3.0
###############################################################

set -e

#Use library
export ALEXPRO100_LIB_LOCATION="${ALEXPRO100_LIB_LOCATION:-./lib/alexpro100_lib.sh}"
# shellcheck disable=SC1091
source ./lib/common/lib_connect.sh

[[ $UID != 0 ]] && return_err "This script requries root permissions!"

# Check options.
if [[ -z $4 ]]; then
  echo "Void linux boostrap script. It uses only choosed mirror."
  echo "Example: $0 x86_64 musl https://alpha.de.repo.voidlinux.org/current /mnt htop"
  exit 1
fi

arch=$1 version=$2 mirror=$3 dir="$(realpath "$4")"; shift 4; add_packages="$*"

parse_arch "$(uname -m)"
if [[ $arch == "$void_arch" ]]; then
  arch_chroot_command="chroot_rootfs auto"
else
  if qemu_chroot check "$arch" ok; then
    arch_chroot_command="qemu_chroot $arch"
  else
    exit 1
  fi
fi

[[ $arch == "i686" ]] && return_err "Arch $arch is not supported!"
install_arch=$arch
if [[ "$void_arch" == "aarch64" ]]; then
  repo_xbps="$mirror/$void_arch/"
else
  repo_xbps="$mirror/musl/"
fi
if [[ "$arch" == "aarch64" ]]; then
  mirror="$mirror/$arch"
  [[ "$version" == "musl" ]] && install_arch="$arch-musl"
elif [[ "$version" == "musl" ]]; then
  install_arch="$arch-musl"; mirror="$mirror/musl"
fi

check_url "$mirror/$install_arch-repodata" || return_err "Incorrect arch $arch, version $version or mirror $mirror!"
check_url "$repo_xbps/$arch-musl-repodata" || return_err "Check $repo_xbps/$arch-musl-repodata!"

#Find, download and unpack database, certificate and xbps-static and install system with it.
create_tmp_dir xbps_tmp
msg_print note "Getting repodata..."
get_file_s - "$repo_xbps/$arch-musl-repodata" | arccat zst - | tar xf - -C "$xbps_tmp"
xbps_name=$(< "$xbps_tmp/index.plist" grep xbps-static- | sed -e 's/<string>//;s/<\/string>//;s/\t\t//')
msg_print note "Downloading and extracting static xbps..."
get_file_s - "$repo_xbps/$xbps_name.$arch-musl.xbps" | arccat zst - | tar xf - -C "$xbps_tmp"

msg_print note "(1) Installing to choosed directory..."
ROOTFS_DIR_NO_FIX=1
chroot_add_mount dir "$dir" "$xbps_tmp/mnt" --rbind --make-rslave
yes | XBPS_TARGET_ARCH=$install_arch SSL_NO_VERIFY_PEER=1 $arch_chroot_command "$xbps_tmp" /usr/bin/xbps-install.static -r /mnt -R "$mirror" -A -Suy base-voidstrap $add_packages
rm -rf "$xbps_tmp"
msg_print note "(2) Configuring..."
unset CHROOT_ACTIVE_MOUNTS CHROOT_CREATED # Bug left. Dirty fix.
$arch_chroot_command "$dir" /usr/bin/xbps-reconfigure -af
echo "#repository=$mirror" >> "$dir/etc/xbps.d/install_repo.conf"

echo "Void linux was succesfully installed to $dir."

# =)
echo "Script succesfully ended its work. Have a nice day!"
