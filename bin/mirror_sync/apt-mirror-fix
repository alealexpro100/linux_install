#!/bin/bash

# Check avaliable files by SHA256 sums. Corrupted files will be redownloaded. Requries /etc/apt/mirror.list file, wget, md5sum, bash, coreutils.
if [[ ! -f $1 ]]; then
  echo "Check and fix script after apt-mirror. Requries path to config."
  echo "Example: $0 /etc/apt/mirror.list"
  exit 1
fi
declare -gx mirror_path=$(grep -F "set base_path" $1 | tr -s " " | cut -d' ' -f3)
file_hashes="$mirror_path/var/SHA256"
declare -gx count=$(cat $file_hashes | wc -l)
echo "Checking files..."
echo "X - Signature is incorrect. Redownloading."
echo "E - File not found. Skipping."
echo "N - Checked. Hashsum is correct."
echo "Files to check: $count"
rm -rf "$mirror_path/mirror/FIXED-FILES" "$mirror_path/mirror/download_E.sh"

deb_check_file() {
  file_sum=$@
  sum=$(echo $file_sum | cut -d' ' -f1)
  file=$(echo $file_sum | cut -d' ' -f2)
  if [[ -f $mirror_path/mirror/$file ]]; then
    case ${#sum} in
      64) echo "$sum $mirror_path/mirror/$file" | sha256sum -c - &>> /dev/null
      ;;
      32) echo "$sum $mirror_path/mirror/$file" | md5sum -c - &>> /dev/null
      ;;
      *) echo "!"
      ;;
    esac
    if [[ $? == 0 ]]; then
      echo -n 'N'
    else
      echo -n 'X'
      echo -e "$file_sum" >> "$mirror_path/mirror/FIXED-FILES"
      rm -rf $mirror_path/mirror/$file
      wget -q -t 3 -O $mirror_path/mirror/$file https://$file
    fi
  else
   echo -n 'E'
   echo -e "wget -q -t 3 -O $mirror_path/mirror/$file https://$file" >> "$mirror_path/mirror/download_E.sh"
  fi
}
export -f deb_check_file

sp="|\-/"; s=1
E_f=0; X_f=0; M_f=0;
while IFS= read -r -n1 char; do
 [[ $char == "X" ]] && X_f=$((X_f+1))
 [[ $char == "E" ]] && E_f=$((E_f+1))
 [[ $char == "N" ]] && N_f=$((N_f+1))
 echo -ne "\e[2KProgress:$((count-N_f))[${sp:(i++)*s%${#sp}:s}]:$3; X:$((X_f)); E:$((E_f)); N:$((N_f)).\r"
done < <(cat $file_hashes | xargs -I {} -n 1 -P $(($(nproc)*128)) bash -c 'deb_check_file "$@"' _ {})
echo -e "\nComplete! Have a nice day!"
