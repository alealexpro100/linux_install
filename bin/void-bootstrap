#!/bin/bash
#######################################
#       Script for installing void    #
#       to dir.                       #
#       Created by Alexey.            #
#######################################
set -e
# Check options.
if [[ -z $1 || -z $2 || -z $3 || -z $4 || -z $5 ]]; then
  echo "Example: $0 ./bin/arch-chroot x86_64 musl https://alpha.de.repo.voidlinux.org/current /mnt htop"
  exit 1
fi

arch_chroot_command=$1 arch=$2 version=$3 mirror=$4 dir=$5 other_arch=0 qemu_arch=""; shift 5; add_packages=$@
#[[ ! -e $arch_chroot_command ]] && echo "$arch_chroot_command not found!" && exit 1

#Detect host arch, parse it.
case $(uname -m) in
  x86|i?86) host_arch=i686;;
  x86_64|amd64) host_arch=x86_64;;
  aarch64|arm64|armv8l) host_arch=aarch64;;
  armhf) host_arch=arm;;
  *) host_arch=$(uname -m);;
esac

#Find, download and unpack database, certificate and xbps-static and install system with it.
echo "Getting repodata to download xbps-static for $host_arch..."
mkdir -p $dir/var/db/xbps/keys
wget -q -O - "$mirror/musl/$host_arch-musl-repodata" | tar -xzvf - -C $dir/var/db/xbps
xbps_name=$(cat $dir/var/db/xbps/index.plist | grep xbps-static- | sed -e 's/<string>//;s/<\/string>//;s/\t\t//')
rm -rf $dir/var/db/xbps/index.plist
touch $dir/var/db/xbps/index-meta.plist
[[ -z $xbps_name ]] && echo "Incorrect arch $arch or version $version or mirror $mirror!" && exit 1
echo "Downloading..."
mkdir -p $dir/var/cache/xbps
wget -q -O "$dir/var/cache/xbps/$xbps_name.$host_arch-musl.xbps" "$mirror/musl/$xbps_name.$host_arch-musl.xbps"
echo "Extracting..."
#Getting list of files for this package and extract it.
list_del=$(echo $(tar -xJvf "$dir/var/cache/xbps/$xbps_name.$host_arch-musl.xbps" -C "$dir" --exclude='INSTALL' --exclude='props.plist' --exclude='files.plist'))
echo "Installing base..."
case $version in
  glibc) mv $dir/var/db/xbps/{index-meta,keys/60:ae:0c:d6:f0:95:17:80:bc:93:46:7a:89:af:a3:2d}.plist;;
  musl) mv $dir/var/db/xbps/{index-meta,keys/3d:b9:c0:50:41:a7:68:4c:2e:2c:a9:a2:5a:04:b7:3f}.plist;;
  *) exit 1;;
esac
case $arch in
  x86_64|i686) mirror="$mirror"
  ;;
  *) mirror="$mirror/$arch"
  ;;
esac
if [[ "$version" == "musl" ]]; then
  arch="$arch-musl"
  mirror="$mirror/musl"
fi
XBPS_ARCH=$arch $dir/usr/bin/xbps-install.static -r $dir -R $mirror -A -Suy base-voidstrap $add_packages
for del_file in $xbps_name.$host_arch-musl.xbps $list_del; do
  rm -rf "$dir/$del_file"
done

echo "Alpine was succesfully installed to $dir."

# =)
echo "Script succesfully ended its work. Have a nice day!"
